#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 10

void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

void permute(int *arr, int start, int end, int cost[MAX_SIZE][MAX_SIZE], int *minCost, int n) {
    if (start == end) {
        int tempCost = 0;
        for (int i = 0; i < n; i++)
            tempCost += cost[arr[i]][arr[(i + 1) % n]];
        if (tempCost < *minCost)
            *minCost = tempCost;
    } else {
        for (int i = start; i <= end; i++) {
            swap(&arr[start], &arr[i]);
            permute(arr, start + 1, end, cost, minCost, n);
            swap(&arr[start], &arr[i]);
        }
    }
}

int main() {
    int n, i, j;
    int cost[MAX_SIZE][MAX_SIZE];
    int minCost = INT_MAX;

    printf("Enter the number of nodes (max %d): ", MAX_SIZE);
    scanf("%d", &n);

    if (n <= 0 || n > MAX_SIZE) {
        printf("Invalid size entered.\n");
        return 1;
    }

    printf("Enter the cost matrix (%dx%d):\n", n, n);
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &cost[i][j]);
        }
    }

    int *perm = (int *)malloc(n * sizeof(int));
    for (i = 0; i < n; i++)
        perm[i] = i;

    permute(perm, 0, n - 1, cost, &minCost, n);

    printf("Optimal cost: %d\n", minCost);

    free(perm);

    return 0;
}

/*output:
Enter the number of nodes (max 10): 3
Enter the cost matrix (3x3):
1 2 3
4 5 6
7 8 9
Optimal cost: 15

--------------------------------
Process exited after 13.11 seconds with return value 0
Press any key to continue . . .*/
