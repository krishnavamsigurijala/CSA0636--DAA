#include<stdio.h>
#include<stdlib.h> 
#define MAX_NODES 10 

int cost[MAX_NODES][MAX_NODES]; 
int visited[MAX_NODES]; 
int n, ne = 1; 

void prim() {
    int i, j, min, a, b, u, v, mincost = 0;
    
    visited[1] = 1; 
    printf("\nEdges of Minimum Cost Spanning Tree are:\n");
    
    while (ne < n) {
        min = 999; 
        for (i = 1; i <= n; i++) {
            if (visited[i]) { 
                for (j = 1; j <= n; j++) {
                    if (!visited[j] && cost[i][j] < min) {
                        min = cost[i][j];
                        a = u = i;
                        b = v = j;
                    }
                }
            }
        }

        if (visited[u] && !visited[v]) { 
            printf("Edge %d: (%d,%d) cost: %d\n", ne++, a, b, min);
            mincost += min;
            visited[v] = 1;
        }
        cost[a][b] = cost[b][a] = 999; 
    }

    printf("Minimum cost of the spanning tree: %d\n", mincost);
}

int main() {
    int i, j;

    printf("Enter the number of nodes: ");
    scanf("%d", &n);

    printf("Enter the adjacency matrix:\n");
    for (i = 1; i <= n; i++) {
        for (j = 1; j <= n; j++) {
            scanf("%d", &cost[i][j]);
            if (cost[i][j] == 0) {
                cost[i][j] = 999; 
            }
        }
    }

    prim();
    return 0;
}
/*OUTPUT:
Enter the number of nodes: 3
Enter the adjacency matrix:
0 1 2
1 0 3
2 3 0

Edges of Minimum Cost Spanning Tree are:
Edge 1: (1,2) cost: 1
Edge 2: (1,3) cost: 2
Minimum cost of the spanning tree: 3

--------------------------------
Process exited after 13.36 seconds with return value 0
Press any key to continue . . .*/
